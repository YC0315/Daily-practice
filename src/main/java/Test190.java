/**
 * @author: yangchao
 * @createTime: 2022-08-21  16:58
 * @description: 完全平方数
 * 给你一个整数 n ，返回 和为 n 的完全平方数的最少数量 。
 * 完全平方数 是一个整数，其值等于另一个整数的平方；换句话说，其值等于一个整数自乘的积。
 * 例如，1、4、9 和 16 都是完全平方数，而 3 和 11 不是。
 * 输入：n = 12
 * 输出：3
 * 解释：12 = 4 + 4 + 4
 */
public class Test190 {
    // 可以转化成完全背包问题
    public int numSquares(int n) {
        // 初始化存放默认值都是0的数组,dp[i]的含义为当为整数i时，和为i的完全平方数的最少数量
        int[] dp = new int[n + 1];
        for (int i = 0; i <= n; i++) {  // 先遍历背包
            // 每次都最大化成最大的平方和次数
            dp[i] = i;
            for (int j = 1; j * j < i; j++) {  // 后遍历物品,枚举上一个状态！！！在当前状态和上一个状态+1之间选取一个最小值
                // 确定递推公式，dp[i] = dp[i-j**2] + 1
                dp[i] = Math.min(dp[i], dp[i - j * j] + 1);
            }
        }
        return dp[n];
    }
}
